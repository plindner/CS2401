/* AUTOMATIC MEMORY - the "normal" way */

int x = 16;

// output the value of the variable named x
cout << x; // 16

// output the memory address of the variable named x
cout << &x; // 0xfe52


/* POINTERS - a variable that stores an address */
// declare a pointer
int* ptr;

// save the address of x to the pointer variable
ptr = &x;

// output the value of the variable named ptr
cout << ptr; // 0xfe52

// output the memory address of the variable ptr
cout << &ptr; // 0x1131

// output the value stored in the memory address the pointer is pointing to
cout << *ptr; // 16


/* DYNAMIC MEMORY */

// allocate dynamic memory
//new int; // bad - not storing the address new returned anywhere
ptr = new int;
*ptr = 15;
(*ptr)--;
delete ptr;
ptr = new int;

Transaction *t;
t = new Transaction;
delete t;

// Dynamically allocated array
int *data;
data = new int[4];
delete [] data;